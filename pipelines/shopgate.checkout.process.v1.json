{
  "version": "1",
  "pipeline": {
    "id": "shopgate.checkout.process.v1",
    "public": true,
    "input": [
      {"key": "checkout", "id": "10"}
    ],
    "output": [
      {"key": "orderId", "id": "20"}
    ],
    "steps": [
      {
        "_comment": "Provides some values for the checkout lock.",

        "type": "staticValue",
        "input": [],
        "values": [{"key": "maxLockDuration", "value": 20}],
        "output": [{"key": "maxLockDuration", "id": "100"}]
      },
      {
        "_comment": "Applies a lock to the users checkout to avoid concurrency issues.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/lockUserCheckout.js",
        "input": [
          {"key": "lockDuration", "id": "100"}
        ],
        "output": [
          {"key": "checkoutLock", "id": "200"}
        ]
      },
      {
        "_comment": "Only logged in users are allowed to perform a checkout.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/checkLoginStatus.js",
        "input": [],
        "output": []
      },
      {
        "_comment": "Fetch user data for the checkout",

        "type": "pipeline",
        "id": "shopgate.user.getUser.v1",
        "trusted": true,
        "input": [],
        "output": [
          {"key": "id", "id": "201"},
          {"key": "mail", "id": "202"},
          {"key": "firstName", "id": "203"},
          {"key": "lastName", "id": "204"}
        ]
      },
      {
        "_comment": "Request the currently selected shipping method from the incoming checkout.",

        "type": "pipeline",
        "id": "shopgate.checkout.getShippingMethod.v1",
        "input": [
          {"key": "checkout", "id": "10"}
        ],
        "output": [
          {"key": "shippingMethod", "id": "14", "optional": true}
        ]
      },
      {
        "_comment": "Defines a list of properties to keep from the shipping method, because not all properties are used to create the order.",

        "type": "staticValue",
        "input": [],
        "values": [{"key": "shippingMethodPropertyFilter", "value": [
          "id",
          "name",
          "amount",
          "taxAmount"
        ]}],
        "output": [
          {"key": "shippingMethodPropertyFilter", "id": "8"}
        ]
      },
      {
        "_comment": "Filters out all non white-listed properties from the shipping method.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/filterInput.js",
        "input": [
          {"key": "properties", "id": "8"},
          {"key": "hydratedObject", "id": "14", "optional": true}
        ],
        "output": [
          {"key": "filteredObject", "id": "14", "optional": true}
        ]
      },
      {
        "_comment": "Put user data into a single object to be injected into the checkout object.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/packInput.js",
        "input": [
          {"key": "id", "id": "201"},
          {"key": "mail", "id": "202"},
          {"key": "firstName", "id": "203"},
          {"key": "lastName", "id": "204"}
        ],
        "output": [
          {"key": "data", "id": "301"}
        ]
      },
      {
        "_comment": "Merge user data into the checkout object.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/mergeInput.js",
        "input": [
          {"key": "first", "id": "10"},
          {"key": "second", "id": "301"}
        ],
        "output": [
          {"key": "data", "id": "10"}
        ]
      },
      {
        "_comment": "Avoids duplicate checkouts and other concurrency issues, by checking the previously installed lock.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/checkConcurrency.js",
        "input": [
          {"key": "checkoutLock", "id": "200"}
        ],
        "output": []
      },
      {
        "_comment": "Request totals data based on the current checkout data.",

        "type": "pipeline",
        "id": "shopgate.checkout.getTotals.v1",
        "input": [
          {"key": "checkout", "id": "10"}
        ],
        "output": [
          {"key": "currency", "id": "400"},
          {"key": "total", "id": "401"},
          {"key": "totals", "id": "402"}
        ]
      },
      {
        "_comment": "Pack totals into an object for later merge.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/packInput.js",
        "input": [
          {"key": "currency", "id": "400"},
          {"key": "total", "id": "401"},
          {"key": "totals", "id": "402"}
        ],
        "output": [
          {"key": "data", "id": "302"}
        ]
      },
      {
        "_comment": "Merge totals into the checkout object.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/mergeInput.js",
        "input": [
          {"key": "first", "id": "10"},
          {"key": "second", "id": "302"}
        ],
        "output": [
          {"key": "data", "id": "10"}
        ]
      },
      {
        "type": "pipeline",
        "id": "shopgate.checkout.validate.v1",
        "input": [
          {"key": "order", "id": "600"}
        ],
        "output": []
      },
      {
        "type": "pipeline",
        "id": "shopgate.order.create.v1",
        "input": [
          {"key": "order", "id": "600"}
        ],
        "output": [
          {"key": "orderId", "id": "20"}
        ]
      },
      {
        "type": "pipeline",
        "id": "shopgate.cart.deleteCart.v1",
        "input": [],
        "output": []
      },
      {
        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/unlockUserCheckout.js",
        "input": [],
        "output": []
      },
      {
        "type": "errorCatchExtension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/handleError.js",
        "input": [],
        "output": []
      }
    ]
  }
}
