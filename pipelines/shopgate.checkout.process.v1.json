{
  "version": "1",
  "pipeline": {
    "id": "shopgate.checkout.process.v1",
    "public": true,
    "input": [
      {"key": "checkout", "id": "1"}
    ],
    "output": [
      {"key": "orderId", "id": "10"}
    ],
    "steps": [
      {
        "_comment": "Only logged in users are allowed to perform a checkout.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/checkLoginStatus.js",
        "input": [],
        "output": []
      },

      {
        "_comment": "Provides a required value for the checkout lock. The lock will be automatically lifted after given seconds.",

        "type": "staticValue",
        "input": [],
        "values": [{"key": "maxLockDuration", "value": 20}],
        "output": [{"key": "maxLockDuration", "id": "500"}]
      },
      {
        "_comment": "Applies a lock to the users checkout to avoid concurrency issues.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/lockUserCheckout.js",
        "input": [
          {"key": "lockDuration", "id": "500"}
        ],
        "output": [
          {"key": "checkoutLock", "id": "501"}
        ]
      },

      {
        "_comment": "Copy checkout object for modification.",

        "type": "extension",
        "id": "@shopgate/util",
        "path": "@shopgate/util/util/merge.js",
        "input": [
          {"key": "first", "id": "1"}
        ],
        "output": [
          {"key": "data", "id": "100"}
        ]
      },

      {
        "_comment": "Include user data into the checkout",

        "type": "pipeline",
        "id": "shopgate.checkout.processUser.v1",
        "trusted": true,
        "input": [
          {"key": "checkout", "id": "100"}
        ],
        "output": [
          {"key": "checkout", "id": "100"}
        ]
      },

      {
        "_comment": "Avoids duplicate checkouts and other concurrency issues, by checking the previously installed lock.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/checkConcurrency.js",
        "input": [
          {"key": "checkoutLock", "id": "501"}
        ],
        "output": []
      },

      {
        "_comment": "Include data of the currently selected shipping method from the incoming checkout.",

        "type": "pipeline",
        "id": "shopgate.checkout.processShipping.v1",
        "trusted": false,
        "input": [
          {"key": "checkout", "id": "100"}
        ],
        "output": [
          {"key": "checkout", "id": "100"}
        ]
      },

      {
        "_comment": "Include data of the currently selected payment method from the incoming checkout.",

        "type": "pipeline",
        "id": "shopgate.checkout.processPayment.v1",
        "trusted": false,
        "input": [
          {"key": "checkout", "id": "100"}
        ],
        "output": [
          {"key": "checkout", "id": "100"}
        ]
      },

      {
        "_comment": "Add totals to the checkout data.",

        "type": "pipeline",
        "id": "shopgate.checkout.processTotals.v1",
        "input": [
          {"key": "checkout", "id": "100"}
        ],
        "output": [
          {"key": "checkout", "id": "100"}
        ]
      },

      {
        "_comment": "Add currency to the checkout data.",

        "type": "pipeline",
        "id": "shopgate.checkout.processCurrency.v1",
        "input": [
          {"key": "checkout", "id": "100"}
        ],
        "output": [
          {"key": "checkout", "id": "100"}
        ]
      },

      {
        "_comment": "Validates the checkout object as order to make sure all the data is present.",

        "type": "pipeline",
        "id": "shopgate.checkout.validate.v1",
        "input": [
          {"key": "order", "id": "100"}
        ],
        "output": []
      },

      {
        "_comment": "Creates an actual order of the checkout data.",

        "type": "pipeline",
        "id": "shopgate.order.create.v1",
        "input": [
          {"key": "order", "id": "100"}
        ],
        "output": [
          {"key": "orderId", "id": "10"}
        ]
      },

      {
        "_comment": "Empties the cart to avoid ordering it again.",

        "type": "pipeline",
        "id": "shopgate.cart.deleteCart.v1",
        "input": [],
        "output": []
      },

      {
        "_comment": "Release the lock, so the order process is unblocked before the lock times out.",

        "type": "extension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/unlockUserCheckout.js",
        "input": [],
        "output": []
      },

      {
        "_comment": "Handles all error responses, removes the checkout lock and generates a proper error for the frontend to process.",

        "type": "errorCatchExtension",
        "id": "@shopgate/checkout",
        "path": "@shopgate/checkout/checkout/handleError.js",
        "input": [],
        "output": []
      }
    ]
  }
}
